{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { MessageBox } from 'element-ui';\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      goodsData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      totalPrice: 0,\n      goodsPrice: 0,\n      total: 0,\n      address: null,\n      addressData: [],\n      selectedData: []\n    };\n  },\n  mounted() {\n    this.loadGoods(1);\n    this.loadAddress();\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    loadAddress() {\n      this.$request.get('/user/selectAll').then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadGoods(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/cart/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.goodsData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    navTo(url) {\n      location.href = url;\n    },\n    del(id) {\n      this.$request.delete('/cart/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('移除成功');\n          this.loadGoods(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadGoods(pageNum);\n    },\n    handleSelectionChange(rows) {\n      this.totalPrice = 0;\n      this.selectedData = rows;\n      // 计计算总价格\n      this.selectedData.forEach(item => {\n        this.totalPrice += item.goodsPrice * item.num;\n      });\n    },\n    handleChange(row) {\n      this.$request.put('/cart/update', {\n        id: row.id,\n        num: row.num\n      }).then(res => {\n        if (res.code === '200') {\n          //this.$message.success('数量已更新');\n          // 重新计算总价\n          this.totalPrice = 0;\n          this.selectedData.forEach(item => {\n            this.totalPrice += item.goodsPrice * item.num;\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        this.$message.error('更新过程中发生错误');\n      });\n    },\n    // 立即购买\n    after() {\n      if (!this.selectedData || this.selectedData.length === 0) {\n        this.$message.warning('请选择商品');\n        return;\n      }\n      if (this.user.address === null) {\n        this.$message.warning('请选择收货地址');\n        return;\n      }\n      const goodsPrice = this.localNum * this.cartData.goodsPrice;\n      MessageBox.confirm(`确认购买？<br>总价：<strong style=\"color: red;\">¥${goodsPrice.toFixed(2)}</strong>`, '购买', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning',\n        dangerouslyUseHTMLString: true\n      }).then(() => {\n        this.pay();\n      }).catch(() => {\n        console.log('取消购买');\n      });\n    },\n    pay() {\n      let data = {\n        userId: this.user.id,\n        phone: this.user.phone,\n        addressId: this.user.address,\n        // 使用 addressId 代替 address\n        status: '待发货',\n        cartData: this.selectedData\n      };\n\n      //这里是购物车的下单逻辑\n      this.$request.post('/orders/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.loadGoods(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["MessageBox","data","user","JSON","parse","localStorage","getItem","goodsData","pageNum","pageSize","totalPrice","goodsPrice","total","address","addressData","selectedData","mounted","loadGoods","loadAddress","methods","$request","get","then","res","code","$message","error","msg","params","list","navTo","url","location","href","del","id","delete","success","handleCurrentChange","handleSelectionChange","rows","forEach","item","num","handleChange","row","put","catch","after","length","warning","localNum","cartData","confirm","toFixed","confirmButtonText","cancelButtonText","type","dangerouslyUseHTMLString","pay","console","log","userId","phone","addressId","status","post"],"sources":["src/views/front/Cart.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 86%; background-color: white; margin: 30px auto; border-radius: 20px\">\n      <div style=\"padding-bottom: 10px\">\n        <div style=\"display: flex; font-size: 18px; color: #000000FF; line-height: 80px; border-bottom: #cccccc 1px solid;\">\n          <div style=\"margin-left: 20px; \">全部商品（{{ goodsData.length }}）</div>\n          \n        </div>\n        <div style=\"margin: 20px 0; padding: 0 50px\">\n          <div class=\"table\">\n            <el-table :data=\"goodsData\" strip @selection-change=\"handleSelectionChange\">\n              <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n              <el-table-column label=\"商品主图\" width=\"px\">\n                <template v-slot=\"scope\">\n                  <el-image style=\"width: 80px; height: 60px; border-radius: 3px\" v-if=\"scope.row.goodsImg\"\n                            :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"goodsName\" label=\"商品名称\" width=\"240px\">\n                <template v-slot=\"scope\">\n                  <a :href=\"'/front/detail?id=' + scope.row.goodsId\">{{scope.row.goodsName}}</a>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"businessName\" label=\"店铺名称\">\n                <template v-slot=\"scope\">\n                  <a :href=\"'/front/business?id=' + scope.row.businessId\">{{scope.row.businessName}}</a>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"goodsPrice\" label=\"商品单价\"></el-table-column>\n              <el-table-column prop=\"num\" label=\"选择数量\">\n                <template v-slot=\"scope\">\n                  <el-input-number v-model=\"scope.row.num\" style=\"width: 100px\" @change=\"handleChange(scope.row)\" :min=\"1\"></el-input-number>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"选项\" align=\"center\" width=\"180\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">移除购物车</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <div class=\"pagination\" style=\"margin-top: 100px\">\n              <el-pagination\n                  background\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"pageNum\"\n                  :page-sizes=\"[5, 10, 20]\"\n                  :page-size=\"pageSize\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"total\">\n              </el-pagination>\n            </div>\n          <div style=\"flex: 1; font-size: 16px; text-align: right; padding-right: 20px\">\n            已选商品 ￥ {{totalPrice}} <el-button type=\"danger\" round @click=\"after\">下单</el-button>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MessageBox } from 'element-ui';\n\nexport default {\n\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      goodsData: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      totalPrice: 0,\n      goodsPrice: 0,\n      total: 0,\n      address: null,\n      addressData: [],\n      selectedData: [],\n    }\n  },\n  mounted() {\n    this.loadGoods(1)\n    this.loadAddress()\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    loadAddress() {\n      this.$request.get('/user/selectAll').then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    loadGoods(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/cart/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.goodsData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    navTo(url) {\n      location.href = url\n    },\n    del(id) {\n      this.$request.delete('/cart/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('移除成功')\n          this.loadGoods(1)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.loadGoods(pageNum)\n    },\n    handleSelectionChange(rows) {\n      this.totalPrice = 0\n      this.selectedData = rows\n      // 计计算总价格\n      this.selectedData.forEach(item => {\n        this.totalPrice += (item.goodsPrice * item.num)\n      })\n    },\n    handleChange(row) {\n  this.$request.put('/cart/update', { id: row.id, num: row.num })\n    .then(res => {\n      if (res.code === '200') {\n        //this.$message.success('数量已更新');\n        // 重新计算总价\n        this.totalPrice = 0;\n        this.selectedData.forEach(item => {\n          this.totalPrice += item.goodsPrice * item.num;\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n    })\n    .catch(error => {\n      this.$message.error('更新过程中发生错误');\n    });\n},\n // 立即购买\n after() {\n  if (!this.selectedData || this.selectedData.length === 0) {\n        this.$message.warning('请选择商品')\n        return\n      }\n      if (this.user.address === null) {\n        this.$message.warning('请选择收货地址')\n        return\n      }\n    const goodsPrice = this.localNum * this.cartData.goodsPrice;\n    MessageBox.confirm(\n      `确认购买？<br>总价：<strong style=\"color: red;\">¥${goodsPrice.toFixed(2)}</strong>`,\n      '购买',\n      { confirmButtonText: '确认', cancelButtonText: '取消', type: 'warning', dangerouslyUseHTMLString: true }\n    ).then(() => {\n      this.pay();\n    }).catch(() => {\n      console.log('取消购买');\n    });\n  },\n    pay() {\n    let data = {\n        userId: this.user.id,\n        phone:this.user.phone,\n        addressId: this.user.address, // 使用 addressId 代替 address\n        status: '待发货',\n        cartData: this.selectedData\n    \n    };\n\n   //这里是购物车的下单逻辑\n    this.$request.post('/orders/add', data).then(res => {\n        if (res.code === '200') {\n            this.$message.success('操作成功');\n            this.loadGoods(1);\n        } else {\n            this.$message.error(res.msg);\n        }\n    });\n}\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}