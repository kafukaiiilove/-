{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      addressData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      formVisible: false,\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入收货人',\n          trigger: 'blur'\n        }],\n        useraddress: [{\n          required: true,\n          message: '请输入收货地址',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入联系电话',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.loadAddress(1);\n  },\n  methods: {\n    addAddress() {\n      this.form = {};\n      this.formVisible = true;\n    },\n    confirmSetDefault(row) {\n      this.$confirm(`是否将 \"${row.username + row.useraddress}\" 的地址设为默认地址？`, '确认操作', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.setDefaultAddress(row);\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消设置'\n        });\n      });\n    },\n    editAddress(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.formVisible = true;\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.userId = this.user.id;\n          this.$request({\n            url: this.form.id ? '/address/update' : '/address/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.loadAddress(1);\n              this.formVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    loadAddress(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/address/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    navTo(url) {\n      location.href = url;\n    },\n    del(id) {\n      this.$request.delete('/address/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('删除成功');\n          this.loadAddress(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAddress(pageNum);\n    },\n    setDefaultAddress(row) {\n      console.log('设置默认地址:', row);\n      const defaultAddress = row.useraddress;\n      const defaultPhone = row.phone;\n      const defaultName = row.username;\n      this.updateUserAddress(defaultAddress, defaultPhone, defaultName);\n      then(() => {\n        // 更新当前行状态为默认地址\n        this.addressList.forEach(item => {\n          item.isDefault = item.id === row.id; // 仅当前行设置为默认地址\n        });\n        this.$message({\n          type: 'warning',\n          message: `${row.useraddress} 已设为默认地址`\n        });\n      });\n    },\n    updateUserAddress(address, phone, name) {\n      return new Promise((resolve, reject) => {\n        this.$axios.post('/user/updateAddress', {\n          address: address,\n          phone: phone,\n          name: name,\n          userId: this.user.id\n        }).then(response => {\n          if (response.data === '默认地址、电话和姓名更新成功') {\n            resolve();\n          } else {\n            reject(new Error('更新失败'));\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","addressData","pageNum","pageSize","total","formVisible","form","rules","username","required","message","trigger","useraddress","phone","mounted","loadAddress","methods","addAddress","confirmSetDefault","row","$confirm","confirmButtonText","cancelButtonText","type","then","setDefaultAddress","catch","$message","editAddress","stringify","save","$refs","formRef","validate","valid","userId","id","$request","url","method","res","code","success","error","msg","get","params","list","navTo","location","href","del","delete","handleCurrentChange","console","log","defaultAddress","defaultPhone","defaultName","updateUserAddress","addressList","forEach","item","isDefault","address","name","Promise","resolve","reject","$axios","post","response","Error"],"sources":["src/views/front/Address.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 86%; background-color: white; margin: 30px auto; border-radius: 20px\">\n      <div style=\"padding-bottom: 10px\">\n        <div style=\"display: flex; font-size: 18px; color: #000000FF; line-height: 80px; border-bottom: #cccccc 1px solid;\">\n          <div style=\"flex: 3; margin-left: 20px\">我的地址</div>\n          <div style=\"flex: 1; text-align: right; padding-right: 20px\">\n            <el-button type=\"warning\" round @click=\"addAddress\">添加收货地址</el-button>\n          </div>\n        </div>\n        \n        <div style=\"margin: 20px 0; padding: 0 50px\">\n          <div class=\"table\">\n            <el-table :data=\"addressData\" stripe>\n      <el-table-column prop=\"username\" label=\"收货人\" width=\"120px\"></el-table-column>\n      <el-table-column prop=\"useraddress\" label=\"收货地址\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\n\n      <el-table-column label=\"操作\" align=\"center\" width=\"260\">\n  <template v-slot=\"scope\">\n    <el-button size=\"mini\" type=\"primary\" plain @click=\"editAddress(scope.row)\">编辑</el-button>\n    <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n    <el-button \n  size=\"mini\" \n  :type=\"scope.row.isDefault ? 'warning' : 'success'\" \n  plain \n  @click=\"confirmSetDefault(scope.row)\">\n  {{ scope.row.isDefault ? '默认地址' : '设为默认地址' }}\n</el-button>\n  </template>\n</el-table-column>\n\n    </el-table>\n\n            <div class=\"pagination\" style=\"margin-top: 20px\">\n              <el-pagination\n                  background\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"pageNum\"\n                  :page-sizes=\"[5, 10, 20]\"\n                  :page-size=\"pageSize\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"total\">\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <el-dialog title=\"地址信息\" :visible.sync=\"formVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n  <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n    <el-form-item prop=\"username\" label=\"收货人\">\n      <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\n    </el-form-item>\n    <el-form-item prop=\"useraddress\" label=\"收货地址\">\n      <el-input v-model=\"form.useraddress\" autocomplete=\"off\"></el-input>\n    </el-form-item>\n    <el-form-item prop=\"phone\" label=\"联系电话\">\n      <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\n    </el-form-item>\n  </el-form>\n  <div slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"formVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n  </div>\n</el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      addressData: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      formVisible: false,\n      form: {},\n      rules: {\n        username: [\n          { required: true, message: '请输入收货人', trigger: 'blur' },\n        ],\n        useraddress: [\n          { required: true, message: '请输入收货地址', trigger: 'blur' },\n        ],\n        phone: [\n          { required: true, message: '请输入联系电话', trigger: 'blur' },\n        ],\n      },\n    }\n  },\n  mounted() {\n    this.loadAddress(1)\n  },\n  methods: {\n    addAddress() {\n      this.form = {}\n      this.formVisible = true\n    },\n    confirmSetDefault(row) {\n      this.$confirm(\n        `是否将 \"${row.username + row.useraddress}\" 的地址设为默认地址？`,\n        '确认操作',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      )\n        .then(() => {\n          this.setDefaultAddress(row);\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消设置',\n          });\n        });\n    },\n    editAddress(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.formVisible = true\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.userId = this.user.id\n          this.$request({\n            url: this.form.id ? '/address/update' : '/address/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.loadAddress(1)\n              this.formVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    loadAddress(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/address/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    navTo(url) {\n      location.href = url\n    },\n    del(id) {\n      this.$request.delete('/address/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('删除成功')\n          this.loadAddress(1)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAddress(pageNum)\n    },\n    setDefaultAddress(row) {\n  console.log('设置默认地址:', row);\n  const defaultAddress = row.useraddress;\n  const defaultPhone = row.phone;\n  const defaultName = row.username;\n  this.updateUserAddress(defaultAddress, defaultPhone, defaultName)\n  then(() => {\n      // 更新当前行状态为默认地址\n      this.addressList.forEach(item => {\n        item.isDefault = item.id === row.id; // 仅当前行设置为默认地址\n      });\n\n      this.$message({\n        type: 'warning',\n        message: `${row.useraddress} 已设为默认地址`,\n      });\n    });\n},\n\nupdateUserAddress(address, phone, name) {\n  return new Promise((resolve, reject) => {\n    this.$axios.post('/user/updateAddress', { \n      address: address, \n      phone: phone,\n      name: name,  \n      userId: this.user.id \n    })\n    .then(response => {\n      if (response.data === '默认地址、电话和姓名更新成功') {\n        resolve();\n      } else {\n        reject(new Error('更新失败'));\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      reject(error);\n    });\n  });\n},\n  }\n  \n}\n</script>"],"mappings":";;AAuEA;EACAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,WAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,WAAA;MACAC,IAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,WAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,KAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAX,IAAA;MACA,KAAAD,WAAA;IACA;IACAa,kBAAAC,GAAA;MACA,KAAAC,QAAA,CACA,QAAAD,GAAA,CAAAX,QAAA,GAAAW,GAAA,CAAAP,WAAA,gBACA,QACA;QACAS,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,CACA,EACAC,IAAA;QACA,KAAAC,iBAAA,CAAAN,GAAA;MACA,GACAO,KAAA;QACA,KAAAC,QAAA;UACAJ,IAAA;UACAb,OAAA;QACA;MACA;IACA;IACAkB,YAAAT,GAAA;MACA,KAAAb,IAAA,GAAAT,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAgC,SAAA,CAAAV,GAAA;MACA,KAAAd,WAAA;IACA;IACAyB,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAA5B,IAAA,CAAA6B,MAAA,QAAAvC,IAAA,CAAAwC,EAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAAhC,IAAA,CAAA8B,EAAA;YACAG,MAAA,OAAAjC,IAAA,CAAA8B,EAAA;YACAzC,IAAA,OAAAW;UACA,GAAAkB,IAAA,CAAAgB,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAd,QAAA,CAAAe,OAAA;cACA,KAAA3B,WAAA;cACA,KAAAV,WAAA;YACA;cACA,KAAAsB,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;YACA;UACA;QACA;MACA;IACA;IACA7B,YAAAb,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAmC,QAAA,CAAAQ,GAAA;QACAC,MAAA;UACA5C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAAqB,IAAA,CAAAgB,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAxC,WAAA,GAAAuC,GAAA,CAAA7C,IAAA,EAAAoD,IAAA;UACA,KAAA3C,KAAA,GAAAoC,GAAA,CAAA7C,IAAA,EAAAS,KAAA;QACA;UACA,KAAAuB,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAI,MAAAV,GAAA;MACAW,QAAA,CAAAC,IAAA,GAAAZ,GAAA;IACA;IACAa,IAAAf,EAAA;MACA,KAAAC,QAAA,CAAAe,MAAA,sBAAAhB,EAAA,EAAAZ,IAAA,CAAAgB,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAd,QAAA,CAAAe,OAAA;UACA,KAAA3B,WAAA;QACA;UACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAS,oBAAAnD,OAAA;MACA,KAAAa,WAAA,CAAAb,OAAA;IACA;IACAuB,kBAAAN,GAAA;MACAmC,OAAA,CAAAC,GAAA,YAAApC,GAAA;MACA,MAAAqC,cAAA,GAAArC,GAAA,CAAAP,WAAA;MACA,MAAA6C,YAAA,GAAAtC,GAAA,CAAAN,KAAA;MACA,MAAA6C,WAAA,GAAAvC,GAAA,CAAAX,QAAA;MACA,KAAAmD,iBAAA,CAAAH,cAAA,EAAAC,YAAA,EAAAC,WAAA;MACAlC,IAAA;QACA;QACA,KAAAoC,WAAA,CAAAC,OAAA,CAAAC,IAAA;UACAA,IAAA,CAAAC,SAAA,GAAAD,IAAA,CAAA1B,EAAA,KAAAjB,GAAA,CAAAiB,EAAA;QACA;QAEA,KAAAT,QAAA;UACAJ,IAAA;UACAb,OAAA,KAAAS,GAAA,CAAAP,WAAA;QACA;MACA;IACA;IAEA+C,kBAAAK,OAAA,EAAAnD,KAAA,EAAAoD,IAAA;MACA,WAAAC,OAAA,EAAAC,OAAA,EAAAC,MAAA;QACA,KAAAC,MAAA,CAAAC,IAAA;UACAN,OAAA,EAAAA,OAAA;UACAnD,KAAA,EAAAA,KAAA;UACAoD,IAAA,EAAAA,IAAA;UACA9B,MAAA,OAAAvC,IAAA,CAAAwC;QACA,GACAZ,IAAA,CAAA+C,QAAA;UACA,IAAAA,QAAA,CAAA5E,IAAA;YACAwE,OAAA;UACA;YACAC,MAAA,KAAAI,KAAA;UACA;QACA,GACA9C,KAAA,CAAAiB,KAAA;UACAW,OAAA,CAAAX,KAAA,WAAAA,KAAA;UACAyB,MAAA,CAAAzB,KAAA;QACA;MACA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}