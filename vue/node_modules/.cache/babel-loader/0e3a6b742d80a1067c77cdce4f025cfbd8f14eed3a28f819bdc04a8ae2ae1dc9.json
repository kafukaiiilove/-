{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      // 用户信息从本地存储获取\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      // 控制修改密码弹窗的显示与否\n      dialogVisible: false,\n      // 密码修改表单的验证规则\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    // 监听路由变化，当进入 \"Person\" 页面时加载用户数据\n    $route(to) {\n      if (to.name === 'Person') {\n        this.loadUserData();\n      }\n    }\n  },\n  methods: {\n    // 更新用户信息\n    update() {\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          this.$message.success('保存成功');\n          localStorage.setItem('xm-user', JSON.stringify(this.user)); // 更新本地存储\n          this.$emit('update:user'); // 触发父级更新\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 头像上传成功后的回调\n    handleAvatarSuccess(response) {\n      this.$set(this.user, 'avatar', response.data); // 更新用户头像\n    },\n    // 显示修改密码弹窗\n    updatePassword() {\n      this.dialogVisible = true;\n    },\n    // 保存修改密码\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              this.$message.success('修改密码成功');\n              this.$router.push('/login'); // 跳转到登录页面\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 加载用户数据\n    loadUserData() {\n      this.user = JSON.parse(localStorage.getItem('xm-user') || '{}');\n    }\n  }\n};","map":{"version":3,"names":["data","validatePassword","rule","value","callback","Error","user","newPassword","JSON","parse","localStorage","getItem","dialogVisible","rules","password","required","message","trigger","confirmPassword","validator","watch","$route","to","name","loadUserData","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","handleAvatarSuccess","response","$set","updatePassword","save","$refs","formRef","validate","valid","$router","push"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <el-card style=\"width: 50%; margin: 30px auto\">\r\n      <!-- 修改密码按钮 -->\r\n      <div style=\"text-align: right; margin-bottom: 20px\">\r\n        <el-button type=\"primary\" @click=\"updatePassword\">修改密码</el-button>\r\n      </div>\r\n\r\n      <!-- 用户信息表单 -->\r\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"$baseUrl + '/files/upload'\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n\r\n        <!-- 用户信息字段 -->\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"昵称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\" prop=\"address\">\r\n          <el-input v-model=\"user.address\" placeholder=\"地址\"></el-input>\r\n        </el-form-item>\r\n\r\n        <!-- 保存按钮 -->\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <!-- 修改密码弹窗 -->\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible\" width=\"30%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"原始密码\" prop=\"password\">\r\n          <el-input show-password v-model=\"user.password\" placeholder=\"原始密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input show-password v-model=\"user.newPassword\" placeholder=\"新密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input show-password v-model=\"user.confirmPassword\" placeholder=\"确认密码\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请确认密码'));\r\n      } else if (value !== this.user.newPassword) {\r\n        callback(new Error('确认密码错误'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      // 用户信息从本地存储获取\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n\r\n      // 控制修改密码弹窗的显示与否\r\n      dialogVisible: false,\r\n\r\n      // 密码修改表单的验证规则\r\n      rules: {\r\n        password: [\r\n          { required: true, message: '请输入原始密码', trigger: 'blur' },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validatePassword, required: true, trigger: 'blur' },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    // 监听路由变化，当进入 \"Person\" 页面时加载用户数据\r\n    $route(to) {\r\n      if (to.name === 'Person') {\r\n        this.loadUserData();\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // 更新用户信息\r\n    update() {\r\n      this.$request.put('/user/update', this.user).then((res) => {\r\n        if (res.code === '200') {\r\n          this.$message.success('保存成功');\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user)); // 更新本地存储\r\n          this.$emit('update:user'); // 触发父级更新\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    // 头像上传成功后的回调\r\n    handleAvatarSuccess(response) {\r\n      this.$set(this.user, 'avatar', response.data); // 更新用户头像\r\n    },\r\n\r\n    // 显示修改密码弹窗\r\n    updatePassword() {\r\n      this.dialogVisible = true;\r\n    },\r\n\r\n    // 保存修改密码\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.put('/updatePassword', this.user).then((res) => {\r\n            if (res.code === '200') {\r\n              this.$message.success('修改密码成功');\r\n              this.$router.push('/login'); // 跳转到登录页面\r\n            } else {\r\n              this.$message.error(res.msg);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    // 加载用户数据\r\n    loadUserData() {\r\n      this.user = JSON.parse(localStorage.getItem('xm-user') || '{}');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n.el-upload {\r\n  border-radius: 50%;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n"],"mappings":";AAoEA;EACAA,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA;MACA;MACAE,IAAA,EAAAE,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MAEA;MACAC,aAAA;MAEA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,WAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,eAAA,GACA;UAAAC,SAAA,EAAAlB,gBAAA;UAAAc,QAAA;UAAAE,OAAA;QAAA;MAEA;IACA;EACA;EAEAG,KAAA;IACA;IACAC,OAAAC,EAAA;MACA,IAAAA,EAAA,CAAAC,IAAA;QACA,KAAAC,YAAA;MACA;IACA;EACA;EAEAC,OAAA;IACA;IACAC,OAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAtB,IAAA,EAAAuB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACAvB,YAAA,CAAAwB,OAAA,YAAA1B,IAAA,CAAA2B,SAAA,MAAA7B,IAAA;UACA,KAAA8B,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEA;IACAC,oBAAAC,QAAA;MACA,KAAAC,IAAA,MAAAnC,IAAA,YAAAkC,QAAA,CAAAxC,IAAA;IACA;IAEA;IACA0C,eAAA;MACA,KAAA9B,aAAA;IACA;IAEA;IACA+B,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAApB,QAAA,CAAAC,GAAA,yBAAAtB,IAAA,EAAAuB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAe,OAAA,CAAAC,IAAA;YACA;cACA,KAAAjB,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;YACA;UACA;QACA;MACA;IACA;IAEA;IACAd,aAAA;MACA,KAAAlB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}