{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      addressData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      formVisible: false,\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入收货人',\n          trigger: 'blur'\n        }],\n        useraddress: [{\n          required: true,\n          message: '请输入收货地址',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入联系电话',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.loadAddress(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    addAddress() {\n      this.form = {};\n      this.formVisible = true;\n    },\n    confirmSetDefault(row) {\n      this.$confirm(`是否将 \"${row.username + row.useraddress}\" 的地址设为默认地址？`, '确认操作', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.setDefaultAddress(row);\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消设置'\n        });\n      });\n    },\n    setDefaultAddress(row) {\n      console.log('设为默认地址:', row);\n\n      // API request to set default address\n      this.$request.post('/user/setDefaultAddress', {\n        address: row.address,\n        userId: row.userId // Add userId if needed\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success(`已成功将 \"${row.username}\" 的地址设为默认地址！`);\n          this.loadAddress(1); // Reload the address list or any other logic\n        } else {\n          this.$message.error(res.msg); // Handle error if any\n        }\n      }).catch(error => {\n        this.$message.error('设置默认地址失败');\n      });\n    },\n    editAddress(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.formVisible = true;\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.userId = this.user.id;\n          this.$request({\n            url: this.form.id ? '/address/update' : '/address/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.loadAddress(1);\n              this.formVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    loadAddress(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/address/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    navTo(url) {\n      location.href = url;\n    },\n    del(id) {\n      this.$request.delete('/address/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('删除成功');\n          this.loadAddress(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAddress(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","addressData","pageNum","pageSize","total","formVisible","form","rules","username","required","message","trigger","useraddress","phone","mounted","loadAddress","methods","addAddress","confirmSetDefault","row","$confirm","confirmButtonText","cancelButtonText","type","then","setDefaultAddress","catch","$message","console","log","$request","post","address","userId","res","code","success","error","msg","editAddress","stringify","save","$refs","formRef","validate","valid","id","url","method","get","params","list","navTo","location","href","del","delete","handleCurrentChange"],"sources":["src/views/front/Address.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 70%; background-color: white; margin: 30px auto; border-radius: 20px\">\n      <div style=\"padding-bottom: 10px\">\n        <div style=\"display: flex; font-size: 18px; color: #000000FF; line-height: 80px; border-bottom: #cccccc 1px solid;\">\n          <div style=\"flex: 3; margin-left: 20px\">我的地址</div>\n          <div style=\"flex: 1; text-align: right; padding-right: 20px\">\n            <el-button type=\"warning\" round @click=\"addAddress\">添加收货地址</el-button>\n          </div>\n        </div>\n        \n        <div style=\"margin: 20px 0; padding: 0 50px\">\n          <div class=\"table\">\n            <el-table :data=\"addressData\" stripe>\n      <el-table-column prop=\"username\" label=\"收货人\" width=\"120px\"></el-table-column>\n      <el-table-column prop=\"useraddress\" label=\"收货地址\">\n      </el-table-column>\n      <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\n\n      <el-table-column label=\"操作\" align=\"center\" width=\"260\">\n        <template v-slot=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" plain @click=\"editAddress(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"success\"\n            plain\n            @click=\"confirmSetDefault(scope.row)\"\n          >\n            设置默认地址\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n            <div class=\"pagination\" style=\"margin-top: 20px\">\n              <el-pagination\n                  background\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"pageNum\"\n                  :page-sizes=\"[5, 10, 20]\"\n                  :page-size=\"pageSize\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"total\">\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n     <!-- 地址信息对话框 -->\n     <el-dialog title=\"地址信息\" :visible.sync=\"formVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"user\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"username\" label=\"收货人\">\n          <el-input v-model=\"user.username\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"address\" label=\"收货地址\">\n          <el-input v-model=\"user.address\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"phone\" label=\"联系电话\">\n          <el-input v-model=\"user.phone\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"formVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      addressData: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      formVisible: false,\n      form: {},\n      rules: {\n        username: [\n          {required: true, message: '请输入收货人', trigger: 'blur'},\n        ],\n        useraddress: [\n          {required: true, message: '请输入收货地址', trigger: 'blur'},\n        ],\n        phone: [\n          {required: true, message: '请输入联系电话', trigger: 'blur'},\n        ],\n      },\n    }\n  },\n  mounted() {\n    this.loadAddress(1)\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    addAddress() {\n      this.form = {}\n      this.formVisible = true\n    },\n    confirmSetDefault(row) {\n    this.$confirm(\n      `是否将 \"${row.username + row.useraddress}\" 的地址设为默认地址？`,\n      '确认操作',\n      {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }\n    )\n      .then(() => {\n        this.setDefaultAddress(row);\n      })\n      .catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消设置',\n        });\n      });\n  },\n  setDefaultAddress(row) {\n  console.log('设为默认地址:', row);\n  \n  // API request to set default address\n  this.$request\n    .post('/user/setDefaultAddress', {\n      address: row.address,\n      userId: row.userId, // Add userId if needed\n    })\n    .then((res) => {\n      if (res.code === '200') {\n        this.$message.success(`已成功将 \"${row.username}\" 的地址设为默认地址！`);\n        this.loadAddress(1); // Reload the address list or any other logic\n      } else {\n        this.$message.error(res.msg); // Handle error if any\n      }\n    })\n    .catch((error) => {\n      this.$message.error('设置默认地址失败');\n    });\n},\n    editAddress(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.formVisible = true\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.userId = this.user.id\n          this.$request({\n            url: this.form.id ? '/address/update' : '/address/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.loadAddress(1)\n              this.formVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    loadAddress(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/address/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.addressData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    navTo(url) {\n      location.href = url\n    },\n    del(id) {\n      this.$request.delete('/address/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('删除成功')\n          this.loadAddress(1)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAddress(pageNum)\n    }\n    \n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}